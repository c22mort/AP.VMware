<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <TypeDefinitions>

    <!-- MODULES -->
    <ModuleTypes>

      <!-- FILTERED DATASOURCES -->
      <!-- AP.VMware.DataSource.Cluster.Info.Filtered -->
      <!-- Calls AP.VMware.DataSource.Cluster.Info.Powershell, Filters results by VM MoRef (Key) -->
      <DataSourceModuleType ID="AP.VMware.DataSource.Cluster.Info.Filtered" Accessibility="Public" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string"/>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean"/>
          <xsd:element minOccurs="1" name="VirtualCenterName" type="xsd:string"/>
          <xsd:element minOccurs="1" name="ClusterKey" type="xsd:string"/>
        </Configuration>
        <ModuleImplementation Isolation="OwnProcess">
          <Composite>
            <MemberModules>
              <DataSource ID="PSScript" TypeID="AP.VMware.DataSource.Cluster.Info.Powershell">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <Debug>$Config/Debug$</Debug>
                <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
              </DataSource>
              <ConditionDetection ID="FilterByHostKey" TypeID="System!System.ExpressionFilter">
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">Property[@Name='ClusterKey']</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="String">$Config/ClusterKey$</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="FilterByHostKey">
                <Node ID="PSScript" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      
      <!-- POWERSHELL DATASOURCES -->
      <!-- AP.VMware.DataSource.Cluster.Info.Powershell -->
      <!-- Calls AP.VMware.Probe.Cluster.Info.Powershell wraps it with a scheduler -->
      <DataSourceModuleType ID="AP.VMware.DataSource.Cluster.Info.Powershell" Accessibility="Public" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string"/>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean"/>
          <xsd:element minOccurs="1" name="VirtualCenterName" type="xsd:string"/>
        </Configuration>
        <ModuleImplementation Isolation="OwnProcess">
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.SimpleScheduler">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ProbeAction ID="PSScript" TypeID="AP.VMware.Probe.Cluster.Info.Powershell">
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <Debug>$Config/Debug$</Debug>
                <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PSScript">
                <Node ID="Scheduler" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>

      <!-- PROBE MODULES -->
      <!-- AP.VMware.Probe.Cluster.Info.Powershell -->
      <!-- Runs script to Check all Health for all Clusters Returns as Property Bags -->
      <ProbeActionModuleType ID="AP.VMware.Probe.Cluster.Info.Powershell" Accessibility="Public" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean"/>
          <xsd:element minOccurs="1" name="VirtualCenterName" type="xsd:string"/>
        </Configuration>
        <ModuleImplementation Isolation="OwnProcess">
          <Composite>
            <MemberModules>
              <ProbeAction ID="PSScript" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagTriggerOnlyProbe">
                <ScriptName>Get-ClusterInfo.ps1</ScriptName>
                <ScriptBody>$IncludeFileContent/Scripts/Get-ClusterInfo.ps1$</ScriptBody>
                <SnapIns />
                <Parameters>
                  <Parameter>
                    <Name>vCenterName</Name>
                    <Value>$Config/VirtualCenterName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>UserName</Name>
                    <Value>$RunAs[Name="AVD!AP.VMware.vCenterLogin"]/Domain$\$RunAs[Name="AVD!AP.VMware.vCenterLogin"]/UserName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Password</Name>
                    <Value>$RunAs[Name="AVD!AP.VMware.vCenterLogin"]/Password$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Debug</Name>
                    <Value>$Config/Debug$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PSScript" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
        <TriggerOnly>true</TriggerOnly>
      </ProbeActionModuleType>    

    </ModuleTypes>

    <!-- MONITORS -->
    <MonitorTypes>

      <!-- AP.VMware.Monitor.Cluster.HaEnabled -->
      <UnitMonitorType ID="AP.VMware.Monitor.Cluster.HaEnabled" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="HaEnabled" NoDetection="false"/>
          <MonitorTypeState ID="HaNotEnabled" NoDetection="false"/>
        </MonitorTypeStates>
        <Configuration>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string"/>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean"/>
          <xsd:element minOccurs="1" name="VirtualCenterName" type="xsd:string"/>
          <xsd:element minOccurs="1" name="ClusterKey" type="xsd:string"/>
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/>
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string"/>
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int"/>
          <OverrideableParameter ID="Debug" Selector="$Config/Debug$" ParameterType="bool"/>
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="AP.VMware.DataSource.Cluster.Info.Filtered">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <Debug>$Config/Debug$</Debug>
              <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
              <ClusterKey>$Config/ClusterKey$</ClusterKey>
            </DataSource>
            <ProbeAction ID="Probe" TypeID="AP.VMware.Probe.Cluster.Info.Powershell">
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <Debug>$Config/Debug$</Debug>
              <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
            </ProbeAction>
            <ConditionDetection ID="HaEnabledFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='ClusterHaEnabled']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">True</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="HaNotEnabledFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='ClusterHaEnabled']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">False</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="HaEnabled">
              <Node ID="HaEnabledFilter">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="HaNotEnabled">
              <Node ID="HaNotEnabledFilter">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>

      <!-- AP.VMware.Monitor.Cluster.DrsEnabled -->
      <UnitMonitorType ID="AP.VMware.Monitor.Cluster.DrsEnabled" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="DrsEnabled" NoDetection="false"/>
          <MonitorTypeState ID="DrsNotEnabled" NoDetection="false"/>
        </MonitorTypeStates>
        <Configuration>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string"/>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean"/>
          <xsd:element minOccurs="1" name="VirtualCenterName" type="xsd:string"/>
          <xsd:element minOccurs="1" name="ClusterKey" type="xsd:string"/>
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/>
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string"/>
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int"/>
          <OverrideableParameter ID="Debug" Selector="$Config/Debug$" ParameterType="bool"/>
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="AP.VMware.DataSource.Cluster.Info.Filtered">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <Debug>$Config/Debug$</Debug>
              <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
              <ClusterKey>$Config/ClusterKey$</ClusterKey>
            </DataSource>
            <ProbeAction ID="Probe" TypeID="AP.VMware.Probe.Cluster.Info.Powershell">
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <Debug>$Config/Debug$</Debug>
              <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
            </ProbeAction>
            <ConditionDetection ID="DrsEnabledFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='ClusterDrsEnabled']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">True</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="DrsNotEnabledFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='ClusterDrsEnabled']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">False</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="DrsEnabled">
              <Node ID="DrsEnabledFilter">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="DrsNotEnabled">
              <Node ID="DrsNotEnabledFilter">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
      
    </MonitorTypes>

  </TypeDefinitions>

  <LanguagePacks>
    
    <LanguagePack ID="ENU" IsDefault="true">

      <DisplayStrings>
        
        <!-- AP.VMware.DataSource.Cluster.Info.Filtered -->
        <DisplayString ElementID="AP.VMware.DataSource.Cluster.Info.Filtered">
          <Name>Cluster Health Filtered DataSource</Name>
          <Description>Calls AP.VMware.DataSource.Cluster.Info.Powershell, Filters results by Host MoRef (Key)</Description>
        </DisplayString>

        <!-- AP.VMware.DataSource.Cluster.Info.Powershell -->
        <DisplayString ElementID="AP.VMware.DataSource.Cluster.Info.Powershell">
          <Name>Cluster Health Powershell DataSource</Name>
          <Description>Calls AP.VMware.Probe.Cluster.Info.Powershell wraps it with a scheduler</Description>
        </DisplayString>

        <!-- AP.VMware.Probe.Cluster.Info.Powershell -->
        <DisplayString ElementID="AP.VMware.Probe.Cluster.Info.Powershell">
          <Name>Cluster Health Powershell Probe</Name>
          <Description>Runs script to Get Health Properties for all Cluster Property Bags</Description>
        </DisplayString>

        <!-- AP.VMware.Monitor.Cluster.HaEnabled -->
        <DisplayString ElementID="AP.VMware.Monitor.Cluster.HaEnabled">
          <Name>Cluster HA State Monitor</Name>
          <Description>Monitors whether ESX Cluster has HA Enabled</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Cluster.HaEnabled" SubElementID="SyncTime">
          <Name>Synchronisation Time</Name>
          <Description>Offset that this module is started from.</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Cluster.HaEnabled" SubElementID="IntervalSeconds">
          <Name>Interval Seconds</Name>
          <Description>Frequency in seconds that module is run.</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Cluster.HaEnabled" SubElementID="Debug">
          <Name>Debug</Name>
          <Description>Debug Flag, if true then additional info is posted to event log.</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Cluster.HaEnabled" SubElementID="TimeoutSeconds">
          <Name>Timeout Seconds</Name>
          <Description>Seconds before Script Times out.</Description>
        </DisplayString>

        <!-- AP.VMware.Monitor.Cluster.DrsEnabled -->
        <DisplayString ElementID="AP.VMware.Monitor.Cluster.DrsEnabled">
          <Name>Cluster DRS State Monitor</Name>
          <Description>Monitors whether ESX Cluster has DRS Enabled</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Cluster.DrsEnabled" SubElementID="SyncTime">
          <Name>Synchronisation Time</Name>
          <Description>Offset that this module is started from.</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Cluster.DrsEnabled" SubElementID="IntervalSeconds">
          <Name>Interval Seconds</Name>
          <Description>Frequency in seconds that module is run.</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Cluster.DrsEnabled" SubElementID="Debug">
          <Name>Debug</Name>
          <Description>Debug Flag, if true then additional info is posted to event log.</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Cluster.DrsEnabled" SubElementID="TimeoutSeconds">
          <Name>Timeout Seconds</Name>
          <Description>Seconds before Script Times out.</Description>
        </DisplayString>
        
      </DisplayStrings>
      
      <KnowledgeArticles>

        <!-- AP.VMware.Cluster.HA.Monitor -->
        <KnowledgeArticle ElementID="AP.VMware.Cluster.HA.Monitor" Visible="true">
          <MamlContent>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>Summary</title>
              <para>
                Monitors whether Cluster has HA (High Availability) enabled, Uses a Powershell Script and PowerCLI to collect all Host Health Stats for a Virtual Center, Supports Cookdown!
              </para>
            </section>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>States</title>
              <list>
                <listItem>
                  <para>Healthy : Cluster has HA enabled</para>
                </listItem>
                <listItem>
                  <para>Warning : Cluster does not have HA enabled, check cluster configuration</para>
                </listItem>
              </list>
            </section>
          </MamlContent>
        </KnowledgeArticle>

        <!-- AP.VMware.Cluster.DRS.Monitor -->
        <KnowledgeArticle ElementID="AP.VMware.Cluster.DRS.Monitor" Visible="true">
          <MamlContent>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>Summary</title>
              <para>
                Monitors whether Cluster has DRS (Dynamic Resource Scheduler) enabled, Uses a Powershell Script and PowerCLI to collect all Host Health Stats for a Virtual Center, Supports Cookdown!
              </para>
            </section>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>States</title>
              <list>
                <listItem>
                  <para>Healthy : Cluster has DRS enabled</para>
                </listItem>
                <listItem>
                  <para>Warning : Cluster does not have DRS enabled, check cluster configuration</para>
                </listItem>
              </list>
            </section>
          </MamlContent>
        </KnowledgeArticle>
      </KnowledgeArticles>
      
    </LanguagePack>
  
  </LanguagePacks>
</ManagementPackFragment>
