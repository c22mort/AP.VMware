<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <TypeDefinitions>
    <ModuleTypes>
      
      <!-- FILTERED DATASOURCES -->
      <!-- AP.VMware.DataSource.Datastore.Info.Filtered -->
      <!-- Calls AP.VMware.DataSource.Datastore.Info.Powershell, Filters results by VM MoRef (Key) -->
      <DataSourceModuleType ID="AP.VMware.DataSource.Datastore.Info.Filtered" Accessibility="Public" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string"/>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean"/>
          <xsd:element minOccurs="1" name="VirtualCenterName" type="xsd:string"/>
          <xsd:element minOccurs="1" name="DatastoreKey" type="xsd:string"/>
        </Configuration>
        <ModuleImplementation Isolation="OwnProcess">
          <Composite>
            <MemberModules>
              <DataSource ID="PSScript" TypeID="AP.VMware.DataSource.Datastore.Info.Powershell">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <Debug>$Config/Debug$</Debug>
                <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
              </DataSource>
              <ConditionDetection ID="FilterByDatastoreKey" TypeID="System!System.ExpressionFilter">
                <Expression>
                  <And>
                    <Expression>
                      <SimpleExpression>
                        <ValueExpression>
                          <XPathQuery Type="String">Property[@Name='DatastoreKey']</XPathQuery>
                        </ValueExpression>
                        <Operator>Equal</Operator>
                        <ValueExpression>
                          <Value Type="String">$Config/DatastoreKey$</Value>
                        </ValueExpression>
                      </SimpleExpression>
                    </Expression>
                    <Expression>
                      <SimpleExpression>
                        <ValueExpression>
                          <XPathQuery Type="Double">Property[@Name='Capacity']</XPathQuery>
                        </ValueExpression>
                        <Operator>Greater</Operator>
                        <ValueExpression>
                          <Value Type="Double">0</Value>
                        </ValueExpression>
                      </SimpleExpression>
                    </Expression>
                  </And>
                </Expression>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="FilterByDatastoreKey">
                <Node ID="PSScript" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>

      <!-- AP.VMware.DataSource.Datastore.FindOrphanedVM.Filtered -->
      <!-- Calls AP.VMware.DataSource.Datastore.FindOrphanedVM.Powershell, Filters results by VM MoRef (Key) -->
      <DataSourceModuleType ID="AP.VMware.DataSource.Datastore.FindOrphanedVM.Filtered" Accessibility="Public" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string"/>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean"/>
          <xsd:element minOccurs="1" name="VirtualCenterName" type="xsd:string"/>
          <xsd:element minOccurs="1" name="DatastoreKey" type="xsd:string"/>
        </Configuration>
        <ModuleImplementation Isolation="OwnProcess">
          <Composite>
            <MemberModules>
              <DataSource ID="PSScript" TypeID="AP.VMware.DataSource.Datastore.FindOrphanedVM.Powershell">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <Debug>$Config/Debug$</Debug>
                <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
              </DataSource>
              <ConditionDetection ID="FilterByDatastoreKey" TypeID="System!System.ExpressionFilter">
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">Property[@Name='DatastoreKey']</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="String">$Config/DatastoreKey$</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="FilterByDatastoreKey">
                <Node ID="PSScript" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>

      <!-- AP.VMware.DataSource.Datastore.FindOrphanedVMDK.Filtered -->
      <!-- Calls AP.VMware.DataSource.Datastore.FindOrphanedVMDK.Powershell, Filters results by VM MoRef (Key) -->
      <DataSourceModuleType ID="AP.VMware.DataSource.Datastore.FindOrphanedVMDK.Filtered" Accessibility="Public" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string"/>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean"/>
          <xsd:element minOccurs="1" name="VirtualCenterName" type="xsd:string"/>
          <xsd:element minOccurs="1" name="DatastoreKey" type="xsd:string"/>
          <xsd:element minOccurs="1" name="FolderFilter" type="xsd:string"/>
          <xsd:element minOccurs="1" name="FileFilter" type="xsd:string"/>
        </Configuration>
        <ModuleImplementation Isolation="OwnProcess">
          <Composite>
            <MemberModules>
              <DataSource ID="PSScript" TypeID="AP.VMware.DataSource.Datastore.FindOrphanedVMDK.Powershell">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <Debug>$Config/Debug$</Debug>
                <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
                <FolderFilter>$Config/FolderFilter$</FolderFilter>
                <FileFilter>$Config/FileFilter$</FileFilter>
              </DataSource>
              <ConditionDetection ID="FilterByDatastoreKey" TypeID="System!System.ExpressionFilter">
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">Property[@Name='DatastoreKey']</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="String">$Config/DatastoreKey$</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="FilterByDatastoreKey">
                <Node ID="PSScript" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>

      
      <!-- POWERSHELL DATASOURCES -->
      <!-- AP.VMware.DataSource.Datastore.Info.Powershell -->
      <!-- Calls AP.VMware.Probe.Datastore.Info.Powershell wraps it with a scheduler -->
      <DataSourceModuleType ID="AP.VMware.DataSource.Datastore.Info.Powershell" Accessibility="Public" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string"/>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean"/>
          <xsd:element minOccurs="1" name="VirtualCenterName" type="xsd:string"/>
        </Configuration>
        <ModuleImplementation Isolation="OwnProcess">
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.SimpleScheduler">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ProbeAction ID="PSScript" TypeID="AP.VMware.Probe.Datastore.Info.Powershell">
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <Debug>$Config/Debug$</Debug>
                <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PSScript">
                <Node ID="Scheduler" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>

      <!-- AP.VMware.DataSource.Datastore.FindOrphanedVM.Powershell -->
      <!-- Calls AP.VMware.Probe.Datastore.FindOrphanedVM.Powershell wraps it with a scheduler -->
      <DataSourceModuleType ID="AP.VMware.DataSource.Datastore.FindOrphanedVM.Powershell" Accessibility="Public" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string"/>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean"/>
          <xsd:element minOccurs="1" name="VirtualCenterName" type="xsd:string"/>
        </Configuration>
        <ModuleImplementation Isolation="OwnProcess">
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.SimpleScheduler">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ProbeAction ID="PSScript" TypeID="AP.VMware.Probe.Datastore.FindOrphanedVM.Powershell">
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <Debug>$Config/Debug$</Debug>
                <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PSScript">
                <Node ID="Scheduler" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>

      <!-- AP.VMware.DataSource.Datastore.FindOrphanedVMDK.Powershell -->
      <!-- Calls AP.VMware.Probe.Datastore.FindOrphanedVMDK.Powershell wraps it with a scheduler -->
      <DataSourceModuleType ID="AP.VMware.DataSource.Datastore.FindOrphanedVMDK.Powershell" Accessibility="Public" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string"/>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean"/>
          <xsd:element minOccurs="1" name="VirtualCenterName" type="xsd:string"/>
          <xsd:element minOccurs="1" name="FolderFilter" type="xsd:string"/>
          <xsd:element minOccurs="1" name="FileFilter" type="xsd:string"/>
        </Configuration>
        <ModuleImplementation Isolation="OwnProcess">
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.SimpleScheduler">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ProbeAction ID="PSScript" TypeID="AP.VMware.Probe.Datastore.FindOrphanedVMDK.Powershell">
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <Debug>$Config/Debug$</Debug>
                <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
                <FolderFilter>$Config/FolderFilter$</FolderFilter>
                <FileFilter>$Config/FileFilter$</FileFilter>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PSScript">
                <Node ID="Scheduler" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>


      <!-- PROBE MODULES -->
      <!-- AP.VMware.Probe.Datastore.Info.Powershell -->
      <!-- Runs script to Check all Info for all Datastores Returns as Property Bags -->
      <ProbeActionModuleType ID="AP.VMware.Probe.Datastore.Info.Powershell" Accessibility="Public" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean"/>
          <xsd:element minOccurs="1" name="VirtualCenterName" type="xsd:string"/>
        </Configuration>
        <ModuleImplementation Isolation="OwnProcess">
          <Composite>
            <MemberModules>
              <ProbeAction ID="PSScript" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagTriggerOnlyProbe">
                <ScriptName>Get-DatastoreInfo.ps1</ScriptName>
                <ScriptBody>$IncludeFileContent/Scripts/Get-DatastoreInfo.ps1$</ScriptBody>
                <SnapIns />
                <Parameters>
                  <Parameter>
                    <Name>vCenterName</Name>
                    <Value>$Config/VirtualCenterName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>UserName</Name>
                    <Value>$RunAs[Name="AVD!AP.VMware.vCenterLogin"]/Domain$\$RunAs[Name="AVD!AP.VMware.vCenterLogin"]/UserName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Password</Name>
                    <Value>$RunAs[Name="AVD!AP.VMware.vCenterLogin"]/Password$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Debug</Name>
                    <Value>$Config/Debug$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PSScript" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
        <TriggerOnly>true</TriggerOnly>
      </ProbeActionModuleType>

      <!-- AP.VMware.Probe.Datastore.FindOrphanedVM.Powershell -->
      <!-- Runs script to Check all Datastores for Orphaned VM files Returns as Property Bags -->
      <ProbeActionModuleType ID="AP.VMware.Probe.Datastore.FindOrphanedVM.Powershell" Accessibility="Public" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean"/>
          <xsd:element minOccurs="1" name="VirtualCenterName" type="xsd:string"/>
        </Configuration>
        <ModuleImplementation Isolation="OwnProcess">
          <Composite>
            <MemberModules>
              <ProbeAction ID="PSScript" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagTriggerOnlyProbe">
                <ScriptName>Get-DatastoreOrphanedVM.ps1</ScriptName>
                <ScriptBody>$IncludeFileContent/Scripts/Get-DatastoreOrphanedVM.ps1$</ScriptBody>
                <SnapIns />
                <Parameters>
                  <Parameter>
                    <Name>vCenterName</Name>
                    <Value>$Config/VirtualCenterName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>UserName</Name>
                    <Value>$RunAs[Name="AVD!AP.VMware.vCenterLogin"]/Domain$\$RunAs[Name="AVD!AP.VMware.vCenterLogin"]/UserName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Password</Name>
                    <Value>$RunAs[Name="AVD!AP.VMware.vCenterLogin"]/Password$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Debug</Name>
                    <Value>$Config/Debug$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PSScript" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
        <TriggerOnly>true</TriggerOnly>
      </ProbeActionModuleType>

      <!-- AP.VMware.Probe.Datastore.FindOrphanedVMDK.Powershell -->
      <!-- Runs script to Check all Datastores for Orphaned VMDK files Returns as Property Bags -->
      <ProbeActionModuleType ID="AP.VMware.Probe.Datastore.FindOrphanedVMDK.Powershell" Accessibility="Public" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean"/>
          <xsd:element minOccurs="1" name="VirtualCenterName" type="xsd:string"/>
          <xsd:element minOccurs="1" name="FolderFilter" type="xsd:string"/>
          <xsd:element minOccurs="1" name="FileFilter" type="xsd:string"/>
        </Configuration>
        <ModuleImplementation Isolation="OwnProcess">
          <Composite>
            <MemberModules>
              <ProbeAction ID="PSScript" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagTriggerOnlyProbe">
                <ScriptName>Get-DatastoreOrphanedVMDK.ps1</ScriptName>
                <ScriptBody>$IncludeFileContent/Scripts/Get-DatastoreOrphanedVMDK.ps1$</ScriptBody>
                <SnapIns />
                <Parameters>
                  <Parameter>
                    <Name>vCenterName</Name>
                    <Value>$Config/VirtualCenterName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>UserName</Name>
                    <Value>$RunAs[Name="AVD!AP.VMware.vCenterLogin"]/Domain$\$RunAs[Name="AVD!AP.VMware.vCenterLogin"]/UserName$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Password</Name>
                    <Value>$RunAs[Name="AVD!AP.VMware.vCenterLogin"]/Password$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Debug</Name>
                    <Value>$Config/Debug$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>FolderFilter</Name>
                    <Value>$Config/FolderFilter$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>FileFilter</Name>
                    <Value>$Config/FileFilter$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PSScript" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
        <TriggerOnly>true</TriggerOnly>
      </ProbeActionModuleType>
      
    </ModuleTypes>

    <MonitorTypes>

      <!-- AP.VMware.Monitor.Datastore.Accessible -->
      <UnitMonitorType ID="AP.VMware.Monitor.Datastore.Accessible" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="DatastoreAccessible" NoDetection="false"/>
          <MonitorTypeState ID="DatastoreNotAccessible" NoDetection="false"/>
        </MonitorTypeStates>
        <Configuration>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string"/>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean"/>
          <xsd:element minOccurs="1" name="VirtualCenterName" type="xsd:string"/>
          <xsd:element minOccurs="1" name="DatastoreKey" type="xsd:string"/>
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/>
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string"/>
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/>
          <OverrideableParameter ID="Debug" Selector="$Config/Debug$" ParameterType="bool"/>
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="AP.VMware.DataSource.Datastore.Info.Filtered">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <Debug>$Config/Debug$</Debug>
              <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
              <DatastoreKey>$Config/DatastoreKey$</DatastoreKey>
            </DataSource>
            <ProbeAction ID="Probe" TypeID="AP.VMware.Probe.Datastore.Info.Powershell">
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <Debug>$Config/Debug$</Debug>
              <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
            </ProbeAction>
            <ConditionDetection ID="DatastoreAccessibleFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='Accessible']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">True</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="DatastoreNotAccessibleFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='Accessible']</XPathQuery>
                  </ValueExpression>
                  <Operator>NotEqual</Operator>
                  <ValueExpression>
                    <Value Type="String">True</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="DatastoreAccessible">
              <Node ID="DatastoreAccessibleFilter">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="DatastoreNotAccessible">
              <Node ID="DatastoreNotAccessibleFilter">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>

      <!-- AP.VMware.Monitor.Datastore.FreeSpace -->
      <UnitMonitorType ID="AP.VMware.Monitor.Datastore.FreeSpace" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="FreeSpaceHealthy" NoDetection="false"/>
          <MonitorTypeState ID="FreeSpaceWarning" NoDetection="false"/>
          <MonitorTypeState ID="FreeSpaceCritical" NoDetection="false"/>
        </MonitorTypeStates>
        <Configuration>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string"/>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean"/>
          <xsd:element minOccurs="1" name="VirtualCenterName" type="xsd:string"/>
          <xsd:element minOccurs="1" name="DatastoreKey" type="xsd:string"/>
          <xsd:element minOccurs="1" name="WarningThresholdPercent" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="CriticalThresholdPercent" type="xsd:integer"/>
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/>
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string"/>
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/>
          <OverrideableParameter ID="Debug" Selector="$Config/Debug$" ParameterType="bool"/>
          <OverrideableParameter ID="WarningThresholdPercent" Selector="$Config/WarningThresholdPercent$" ParameterType="int"/>
          <OverrideableParameter ID="CriticalThresholdPercent" Selector="$Config/CriticalThresholdPercent$" ParameterType="int"/>
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="AP.VMware.DataSource.Datastore.Info.Filtered">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <Debug>$Config/Debug$</Debug>
              <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
              <DatastoreKey>$Config/DatastoreKey$</DatastoreKey>
            </DataSource>
            <ProbeAction ID="Probe" TypeID="AP.VMware.Probe.Datastore.Info.Powershell">
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <Debug>$Config/Debug$</Debug>
              <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
            </ProbeAction>
            <ConditionDetection ID="FreeSpaceHealthyFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Double">Property[@Name='Percentage']</XPathQuery>
                  </ValueExpression>
                  <Operator>Greater</Operator>
                  <ValueExpression>
                    <Value Type="Double">$Config/WarningThresholdPercent$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="FreeSpaceWarningFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <And>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="Double">Property[@Name='Percentage']</XPathQuery>
                      </ValueExpression>
                      <Operator>Greater</Operator>
                      <ValueExpression>
                        <Value Type="Double">$Config/CriticalThresholdPercent$</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="Double">Property[@Name='Percentage']</XPathQuery>
                      </ValueExpression>
                      <Operator>Less</Operator>
                      <ValueExpression>
                        <Value Type="Double">$Config/WarningThresholdPercent$</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                </And>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="FreeSpaceCriticalFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Double">Property[@Name='Percentage']</XPathQuery>
                  </ValueExpression>
                  <Operator>Less</Operator>
                  <ValueExpression>
                    <Value Type="Double">$Config/CriticalThresholdPercent$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="FreeSpaceHealthy">
              <Node ID="FreeSpaceHealthyFilter">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="FreeSpaceWarning">
              <Node ID="FreeSpaceWarningFilter">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="FreeSpaceCritical">
              <Node ID="FreeSpaceCriticalFilter">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>

      <!-- AP.VMware.Monitor.Datastore.FindOrphanedVM -->
      <UnitMonitorType ID="AP.VMware.Monitor.Datastore.FindOrphanedVM" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="NoOrphanedVmFound" NoDetection="false"/>
          <MonitorTypeState ID="OrphanedVmFound" NoDetection="false"/>
        </MonitorTypeStates>
        <Configuration>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string"/>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean"/>
          <xsd:element minOccurs="1" name="VirtualCenterName" type="xsd:string"/>
          <xsd:element minOccurs="1" name="DatastoreKey" type="xsd:string"/>
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/>
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string"/>
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/>
          <OverrideableParameter ID="Debug" Selector="$Config/Debug$" ParameterType="bool"/>
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="AP.VMware.DataSource.Datastore.FindOrphanedVM.Filtered">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <Debug>$Config/Debug$</Debug>
              <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
              <DatastoreKey>$Config/DatastoreKey$</DatastoreKey>
            </DataSource>
            <ProbeAction ID="Probe" TypeID="AP.VMware.Probe.Datastore.FindOrphanedVM.Powershell">
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <Debug>$Config/Debug$</Debug>
              <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
            </ProbeAction>
            <ConditionDetection ID="NoOrphanedVmFoundFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='OrphanedFileNames']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String"></Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="OrphanedVmFoundFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='OrphanedFileNames']</XPathQuery>
                  </ValueExpression>
                  <Operator>NotEqual</Operator>
                  <ValueExpression>
                    <Value Type="String"></Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="NoOrphanedVmFound">
              <Node ID="NoOrphanedVmFoundFilter">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="OrphanedVmFound">
              <Node ID="OrphanedVmFoundFilter">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>

      <!-- AP.VMware.Monitor.Datastore.FindOrphanedVMDK -->
      <UnitMonitorType ID="AP.VMware.Monitor.Datastore.FindOrphanedVMDK" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="NoOrphanedVmdkFound" NoDetection="false"/>
          <MonitorTypeState ID="OrphanedVmdkFound" NoDetection="false"/>
        </MonitorTypeStates>
        <Configuration>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string"/>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer"/>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean"/>
          <xsd:element minOccurs="1" name="VirtualCenterName" type="xsd:string"/>
          <xsd:element minOccurs="1" name="DatastoreKey" type="xsd:string"/>
          <xsd:element minOccurs="1" name="FolderFilter" type="xsd:string"/>
          <xsd:element minOccurs="1" name="FileFilter" type="xsd:string"/>
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/>
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string"/>
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/>
          <OverrideableParameter ID="Debug" Selector="$Config/Debug$" ParameterType="bool"/>
          <OverrideableParameter ID="FolderFilter" Selector="$Config/FolderFilter$" ParameterType="string"/>
          <OverrideableParameter ID="FileFilter" Selector="$Config/FileFilter$" ParameterType="string"/>
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="AP.VMware.DataSource.Datastore.FindOrphanedVMDK.Filtered">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <Debug>$Config/Debug$</Debug>
              <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
              <DatastoreKey>$Config/DatastoreKey$</DatastoreKey>
              <FolderFilter>$Config/FolderFilter$</FolderFilter>
              <FileFilter>$Config/FileFilter$</FileFilter>
            </DataSource>
            <ProbeAction ID="Probe" TypeID="AP.VMware.Probe.Datastore.FindOrphanedVMDK.Powershell">
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <Debug>$Config/Debug$</Debug>
              <VirtualCenterName>$Config/VirtualCenterName$</VirtualCenterName>
              <FolderFilter>$Config/FolderFilter$</FolderFilter>
              <FileFilter>$Config/FileFilter$</FileFilter>
            </ProbeAction>
            <ConditionDetection ID="NoOrphanedVmdkFoundFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='OrphanedFileNames']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">None</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="OrphanedVmdkFoundFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='OrphanedFileNames']</XPathQuery>
                  </ValueExpression>
                  <Operator>NotEqual</Operator>
                  <ValueExpression>
                    <Value Type="String">None</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="NoOrphanedVmdkFound">
              <Node ID="NoOrphanedVmdkFoundFilter">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="OrphanedVmdkFound">
              <Node ID="OrphanedVmdkFoundFilter">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>

    </MonitorTypes>
  </TypeDefinitions>

  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">

      <DisplayStrings>

        <!-- AP.VMware.DataSource.Datastore.Health.Filtered -->
        <DisplayString ElementID="AP.VMware.DataSource.Datastore.Info.Filtered">
          <Name>Datastore Info Filtered DataSource</Name>
          <Description>Calls AP.VMware.DataSource.Datastore.Info.Powershell, Filters results by Datastore MoRef (Key)</Description>
        </DisplayString>

        <!-- AP.VMware.DataSource.Datastore.FindOrphanedVM.Filtered -->
        <DisplayString ElementID="AP.VMware.DataSource.Datastore.FindOrphanedVM.Filtered">
          <Name>Datastore Orphaned VM Filtered DataSource</Name>
          <Description>Calls AP.VMware.DataSource.Datastore.FindOrphanedVM.Powershell, Filters results by Datastore MoRef (Key)</Description>
        </DisplayString>

        <!-- AP.VMware.DataSource.Datastore.FindOrphanedVMDK.Filtered -->
        <DisplayString ElementID="AP.VMware.DataSource.Datastore.FindOrphanedVMDK.Filtered">
          <Name>Datastore Orphaned VMDK Filtered DataSource</Name>
          <Description>Calls AP.VMware.DataSource.Datastore.FindOrphanedVMDK.Powershell, Filters results by Datastore MoRef (Key)</Description>
        </DisplayString>

        <!-- AP.VMware.DataSource.Datastore.Info.Powershell -->
        <DisplayString ElementID="AP.VMware.DataSource.Datastore.Info.Powershell">
          <Name>Datastore Info Powershell DataSource</Name>
          <Description>Calls AP.VMware.Probe.Datastore.Info.Powershell wraps it with a scheduler</Description>
        </DisplayString>

        <!-- AP.VMware.DataSource.Datastore.FindOrphanedVM.Powershell -->
        <DisplayString ElementID="AP.VMware.DataSource.Datastore.FindOrphanedVM.Powershell">
          <Name>Datastore Orphaned VM Powershell DataSource</Name>
          <Description>Calls AP.VMware.Probe.Datastore.FindOrphanedVM.Powershell wraps it with a scheduler</Description>
        </DisplayString>
        
        <!-- AP.VMware.DataSource.Datastore.FindOrphanedVMDK.Powershell -->
        <DisplayString ElementID="AP.VMware.DataSource.Datastore.FindOrphanedVMDK.Powershell">
          <Name>Datastore Orphaned VMDK Powershell DataSource</Name>
          <Description>Calls AP.VMware.Probe.Datastore.FindOrphanedVMDK.Powershell wraps it with a scheduler</Description>
        </DisplayString>

        <!-- AP.VMware.Probe.Datastore.Info.Powershell -->
        <DisplayString ElementID="AP.VMware.Probe.Datastore.Info.Powershell">
          <Name>Datastore Info Powershell Probe</Name>
          <Description>Runs script to Get Information for all Datastores, returns as Property Bags</Description>
        </DisplayString>

        <!-- AP.VMware.Probe.Datastore.FindOrphanedVM.Powershell -->
        <DisplayString ElementID="AP.VMware.Probe.Datastore.FindOrphanedVM.Powershell">
          <Name>Datastore Orphaned VM Powershell Probe</Name>
          <Description>Runs script to Check all Datastores for Orphaned VM files Returns as Property Bags</Description>
        </DisplayString>

        <!-- AP.VMware.Probe.Datastore.FindOrphanedVMDK.Powershell -->
        <DisplayString ElementID="AP.VMware.Probe.Datastore.FindOrphanedVMDK.Powershell">
          <Name>Datastore Orphaned VMDK Powershell Probe</Name>
          <Description>Runs script to Check all Datastores for Orphaned VMDK files Returns as Property Bags</Description>
        </DisplayString>

        <!-- AP.VMware.Monitor.Datastore.FreeSpace -->
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FreeSpace">
          <Name>Datastore FreeSpace Monitor</Name>
          <Description>Monitors Datastores for Free Space</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FreeSpace" SubElementID="SyncTime">
          <Name>Synchronisation Time</Name>
          <Description>Offset that this module is started from.</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FreeSpace" SubElementID="IntervalSeconds">
          <Name>Interval Seconds</Name>
          <Description>Frequency in seconds that module is run.</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FreeSpace" SubElementID="Debug">
          <Name>Debug</Name>
          <Description>Debug Flag, if true then additional info is posted to event log.</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FreeSpace" SubElementID="TimeoutSeconds">
          <Name>Timeout Seconds</Name>
          <Description>Amount of Time the script is allowed to run</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FreeSpace" SubElementID="WarningThresholdPercent">
          <Name>Warning Threshold Percent</Name>
          <Description>Percentage of Datastore FreeSpace below which a Warning Alert will be generated</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FreeSpace" SubElementID="CriticalThresholdPercent">
          <Name>Critical Threshold Percent</Name>
          <Description>Percentage of Datastore FreeSpace below which a Critical Alert will be generated</Description>
        </DisplayString>
        
        <!-- AP.VMware.Monitor.Datastore.Accessible -->
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.Accessible">
          <Name>Datastore Accessible Monitor</Name>
          <Description>Monitors Accessibility State for Datastore</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.Accessible" SubElementID="SyncTime">
          <Name>Synchronisation Time</Name>
          <Description>Offset that this module is started from.</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.Accessible" SubElementID="IntervalSeconds">
          <Name>Interval Seconds</Name>
          <Description>Frequency in seconds that module is run.</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.Accessible" SubElementID="Debug">
          <Name>Debug</Name>
          <Description>Debug Flag, if true then additional info is posted to event log.</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.Accessible" SubElementID="TimeoutSeconds">
          <Name>Timeout Seconds</Name>
          <Description>Amount of Time the script is allowed to run</Description>
        </DisplayString>

        <!-- AP.VMware.Monitor.Datastore.FindOrphanedVM -->
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FindOrphanedVM">
          <Name>Datastore Orphaned VM Monitor</Name>
          <Description>Monitors Datastores for Orphaned VM Files</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FindOrphanedVM" SubElementID="SyncTime">
          <Name>Synchronisation Time</Name>
          <Description>Offset that this module is started from.</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FindOrphanedVM" SubElementID="IntervalSeconds">
          <Name>Interval Seconds</Name>
          <Description>Frequency in seconds that module is run.</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FindOrphanedVM" SubElementID="Debug">
          <Name>Debug</Name>
          <Description>Debug Flag, if true then additional info is posted to event log.</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FindOrphanedVM" SubElementID="TimeoutSeconds">
          <Name>Timeout Seconds</Name>
          <Description>Amount of Time the script is allowed to run</Description>
        </DisplayString>

        <!-- AP.VMware.Monitor.Datastore.FindOrphanedVMDK -->
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FindOrphanedVMDK">
          <Name>Datastore Orphaned VMDK Monitor</Name>
          <Description>Monitors Datastores for Orphaned Virtual Machine Disk Files</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FindOrphanedVMDK" SubElementID="SyncTime">
          <Name>Synchronisation Time</Name>
          <Description>Offset that this module is started from.</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FindOrphanedVMDK" SubElementID="IntervalSeconds">
          <Name>Interval Seconds</Name>
          <Description>Frequency in seconds that module is run.</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FindOrphanedVMDK" SubElementID="Debug">
          <Name>Debug</Name>
          <Description>Debug Flag, if true then additional info is posted to event log.</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FindOrphanedVMDK" SubElementID="TimeoutSeconds">
          <Name>Timeout Seconds</Name>
          <Description>Amount of Time the script is allowed to run</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FindOrphanedVMDK" SubElementID="FolderFilter">
          <Name>Folder Filter</Name>
          <Description>Filters the Folders in this string from the results when checking for orphaned vmdks. Powershell pattern matching (-notmatch), so seperate with a pipe '|' e.g. '-ctk.vmdk|-flat.vmdk'</Description>
        </DisplayString>
        <DisplayString ElementID="AP.VMware.Monitor.Datastore.FindOrphanedVMDK" SubElementID="FileFilter">
          <Name>File Filter</Name>
          <Description>Filters the Files in this string from the results when checking for orphaned vmdks. Powershell pattern matching (-notmatch), so seperate with a pipe '|' e.g. '-ctk.vmdk|-flat.vmdk'</Description>
        </DisplayString>

      </DisplayStrings>

      <KnowledgeArticles>

        <!-- AP.VMware.Datastore.Accessible.Monitor -->
        <KnowledgeArticle ElementID="AP.VMware.Datastore.Accessible.Monitor" Visible="true">
          <MamlContent>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>Summary</title>
              <para>
                Monitors Datastore Accessibility , Uses a Powershell Script and PowerCLI to collect all Datstore Info for a Virtual Center, Supports Cookdown!
              </para>
            </section>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>States</title>
              <list>
                <listItem>
                  <para>Healthy : Datastore is Accessible</para>
                </listItem>
                <listItem>
                  <para>Warning : Datastore is not Accessible</para>
                </listItem>
              </list>
            </section>
          </MamlContent>
        </KnowledgeArticle>

        <!-- AP.VMware.Datastore.Freespace.Monitor -->
        <KnowledgeArticle ElementID="AP.VMware.Datastore.Freespace.Monitor" Visible="true">
          <MamlContent>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>Summary</title>
              <para>
                Monitors Datastore FreeSpace , Uses a Powershell Script and PowerCLI to collect all Datstore Info for a Virtual Center, Supports Cookdown!
              </para>
            </section>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>States</title>
              <list>
                <listItem>
                  <para>Healthy : Datastore is Okay</para>
                </listItem>
                <listItem>
                  <para>Warning : Datastore FreeSpace is running low</para>
                </listItem>
                <listItem>
                  <para>Critical : Datastore FreeSpace is critically low</para>
                </listItem>
              </list>
              <table>
                <row>
                  <headerEntry>
                    <para>Level</para>
                  </headerEntry>
                  <headerEntry>
                    <para>Default Threshold</para>
                  </headerEntry>
                </row>
                <row>
                  <entry>
                    <para>
                      Healthy
                    </para>
                  </entry>
                  <entry>
                    <para>
                      More than 10% Free
                    </para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>
                      Warning
                    </para>
                  </entry>
                  <entry>
                    <para>
                      Less than 10% Free
                    </para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>
                      Critical
                    </para>
                  </entry>
                  <entry>
                    <para>
                      Less than 5% Free
                    </para>
                  </entry>
                </row>
              </table>
            </section>
          </MamlContent>
        </KnowledgeArticle>

        <!-- AP.VMware.Datastore.OrphanedVM.Monitor -->
        <KnowledgeArticle ElementID="AP.VMware.Datastore.OrphanedVM.Monitor" Visible="true">
          <MamlContent>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>Summary</title>
              <para>
                Monitors Datastore files looking for orphaned VM files, Uses a Powershell Script and PowerCLI!
              </para>
            </section>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>States</title>
              <list>
                <listItem>
                  <para>Healthy : No Orphaned VM Files found.</para>
                </listItem>
                <listItem>
                  <para>Warning : Orphaned VM Files found.</para>
                </listItem>
              </list>
            </section>
          </MamlContent>
        </KnowledgeArticle>

        <!-- AP.VMware.Datastore.OrphanedVMDK.Monitor -->
        <KnowledgeArticle ElementID="AP.VMware.Datastore.OrphanedVMDK.Monitor" Visible="true">
          <MamlContent>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>Summary</title>
              <para>
                Monitors Datastore files looking for orphaned VMDK files, Uses a Powershell Script and PowerCLI!
              </para>
            </section>
            <section xmlns="http://schemas.microsoft.com/maml/2004/10">
              <title>States</title>
              <list>
                <listItem>
                  <para>Healthy : No Orphaned VMDK Files found.</para>
                </listItem>
                <listItem>
                  <para>Warning : Orphaned VMDK Files found.</para>
                </listItem>
              </list>
            </section>
          </MamlContent>
        </KnowledgeArticle>

      </KnowledgeArticles>
    </LanguagePack>
  </LanguagePacks>
</ManagementPackFragment>
